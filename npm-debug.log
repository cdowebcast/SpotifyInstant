0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'install' ]
2 info using npm@1.3.24
3 info using node@v0.10.25
4 verbose readDependencies using package.json deps
5 verbose install where, deps [ '/Users/rukmal/Projects/SpotifyInstant',
5 verbose install   [ 'express',
5 verbose install     'jade',
5 verbose install     'spotify-web',
5 verbose install     'socket.io',
5 verbose install     'lame',
5 verbose install     'speaker',
5 verbose install     'node-protobuf' ] ]
6 info preinstall application-name@0.0.1
7 verbose readDependencies using package.json deps
8 verbose already installed skipping express@3.4.8 /Users/rukmal/Projects/SpotifyInstant
9 verbose already installed skipping jade@* /Users/rukmal/Projects/SpotifyInstant
10 verbose already installed skipping spotify-web@~1.1.1 /Users/rukmal/Projects/SpotifyInstant
11 verbose already installed skipping socket.io@~0.9.16 /Users/rukmal/Projects/SpotifyInstant
12 verbose already installed skipping lame@~1.0.3 /Users/rukmal/Projects/SpotifyInstant
13 verbose already installed skipping speaker@~0.1.0 /Users/rukmal/Projects/SpotifyInstant
14 verbose cache add [ 'node-protobuf@*', null ]
15 verbose cache add name=undefined spec="node-protobuf@*" args=["node-protobuf@*",null]
16 verbose parsed url { protocol: null,
16 verbose parsed url   slashes: null,
16 verbose parsed url   auth: null,
16 verbose parsed url   host: null,
16 verbose parsed url   port: null,
16 verbose parsed url   hostname: null,
16 verbose parsed url   hash: null,
16 verbose parsed url   search: null,
16 verbose parsed url   query: null,
16 verbose parsed url   pathname: 'node-protobuf@*',
16 verbose parsed url   path: 'node-protobuf@*',
16 verbose parsed url   href: 'node-protobuf@*' }
17 verbose cache add name="node-protobuf" spec="*" args=["node-protobuf","*"]
18 verbose parsed url { protocol: null,
18 verbose parsed url   slashes: null,
18 verbose parsed url   auth: null,
18 verbose parsed url   host: null,
18 verbose parsed url   port: null,
18 verbose parsed url   hostname: null,
18 verbose parsed url   hash: null,
18 verbose parsed url   search: null,
18 verbose parsed url   query: null,
18 verbose parsed url   pathname: '*',
18 verbose parsed url   path: '*',
18 verbose parsed url   href: '*' }
19 verbose addNamed [ 'node-protobuf', '*' ]
20 verbose addNamed [ null, '*' ]
21 silly lockFile 85119b43-node-protobuf node-protobuf@*
22 verbose lock node-protobuf@* /Users/rukmal/.npm/85119b43-node-protobuf.lock
23 silly addNameRange { name: 'node-protobuf', range: '*', hasData: false }
24 verbose url raw node-protobuf
25 verbose url resolving [ 'https://registry.npmjs.org/', './node-protobuf' ]
26 verbose url resolved https://registry.npmjs.org/node-protobuf
27 info trying registry request attempt 1 at 16:34:55
28 verbose etag "7J3995BSAIOYMN68AU4DF561V"
29 http GET https://registry.npmjs.org/node-protobuf
30 http 304 https://registry.npmjs.org/node-protobuf
31 silly registry.get cb [ 304,
31 silly registry.get   { date: 'Thu, 24 Apr 2014 23:34:54 GMT',
31 silly registry.get     server: 'Apache',
31 silly registry.get     via: '1.1 varnish',
31 silly registry.get     'last-modified': 'Thu, 24 Apr 2014 23:34:55 GMT',
31 silly registry.get     'cache-control': 'max-age=1',
31 silly registry.get     etag: '"7J3995BSAIOYMN68AU4DF561V"',
31 silly registry.get     'x-served-by': 'cache-lax1425-LAX',
31 silly registry.get     'x-cache': 'MISS',
31 silly registry.get     'x-cache-hits': '0',
31 silly registry.get     'x-timer': 'S1398382494.980783939,VS0,VE156',
31 silly registry.get     vary: 'Accept',
31 silly registry.get     'content-length': '0',
31 silly registry.get     'keep-alive': 'timeout=10, max=50',
31 silly registry.get     connection: 'Keep-Alive' } ]
32 verbose etag node-protobuf from cache
33 silly addNameRange number 2 { name: 'node-protobuf', range: '*', hasData: true }
34 silly addNameRange versions [ 'node-protobuf',
34 silly addNameRange   [ '1.0.0',
34 silly addNameRange     '1.0.1',
34 silly addNameRange     '1.0.2',
34 silly addNameRange     '1.0.3',
34 silly addNameRange     '1.0.4',
34 silly addNameRange     '1.0.5',
34 silly addNameRange     '1.0.5-0',
34 silly addNameRange     '1.0.6',
34 silly addNameRange     '1.0.7',
34 silly addNameRange     '1.0.8',
34 silly addNameRange     '1.0.9',
34 silly addNameRange     '1.0.10' ] ]
35 verbose addNamed [ 'node-protobuf', '1.0.10' ]
36 verbose addNamed [ '1.0.10', '1.0.10' ]
37 silly lockFile c1ebdc57-node-protobuf-1-0-10 node-protobuf@1.0.10
38 verbose lock node-protobuf@1.0.10 /Users/rukmal/.npm/c1ebdc57-node-protobuf-1-0-10.lock
39 silly lockFile c1ebdc57-node-protobuf-1-0-10 node-protobuf@1.0.10
40 silly lockFile c1ebdc57-node-protobuf-1-0-10 node-protobuf@1.0.10
41 silly lockFile 85119b43-node-protobuf node-protobuf@*
42 silly lockFile 85119b43-node-protobuf node-protobuf@*
43 silly resolved [ { name: 'node-protobuf',
43 silly resolved     version: '1.0.10',
43 silly resolved     description: 'A Node.js protocol buffer wrapper',
43 silly resolved     author: { name: 'Dmitry Gorbunov' },
43 silly resolved     main: './build/Release/protobuf.node',
43 silly resolved     repository:
43 silly resolved      { type: 'git',
43 silly resolved        url: 'https://github.com/fuwaneko/node-protobuf' },
43 silly resolved     dependencies: {},
43 silly resolved     engines: [ 'node >= 0.10.0' ],
43 silly resolved     licence: 'MIT',
43 silly resolved     devDependencies: { grunt: '~0.4.1', 'grunt-release': '~0.5.1' },
43 silly resolved     scripts: { install: 'node-gyp rebuild' },
43 silly resolved     gypfile: true,
43 silly resolved     readme: '# node-protobuf\n\n[![Build Status](https://travis-ci.org/fuwaneko/node-protobuf.png?branch=master)](https://travis-ci.org/fuwaneko/node-protobuf)\n\nIt\'s a very simple wrapper around protocol buffers library by Google.\nIt uses dynamic message building and parsing based on protocol schema you can get by compiling protocol description.\nI know that wrappers do exist, but I didn\'t like them.\n\n## Issues\n\n* There is no check for required fields present when serializing\n\n## Roadmap\n\n+ Add support for serializing and parsing int64 from/to JS String\n+ Add asynchronous serialize and parse\n+ Refactor code to make it more readable\n+ Add check for required fields present when serializing\n\n## Changelog\n\n### 1.0.8\n\n+ Fixed build on Mac OS X 10.9\n+ Updated README with better example\n\n### 1.0.7\n\n+ Fixed segfault on incorrect schema name.\n\n### 1.0.6\n\n+ Added check for correct argument type and handling for malformed protocol buffers.\n\n### 1.0.5\n\n+ Fixed incorrect parsing of byte datatype. Now it\'s parsed as Node.js Buffer and Buffer can be serialized into byte field. Big thanks to [xanm](https://github.com/AlexMarlo) for contributing.\n\n### 1.0.4\n\n+ Fixed incorrect parsing of optional nested messages\n\n### 1.0.3\n\n+ Fixed incorrect parsing of optional values (now they are omitted from result object if not present)\n\n### 1.0.2\n\n+ Added experimental support for 64-bit precision integers (look below for constructor arguments)\n\n## Requirements\n\n* Protocol Buffers >= 2.1.0\n* Node.js >= 0.10.0\n\n## Installation\n\n### Linux\n\nMake sure you have node, node-gyp, compiler and libprotobuf binary and development files. Then install: ``` npm install node-protobuf ```\nSimple, huh?\n\n### Windows\n\nFirst you have to obtain Microsoft Visual C++ 2010. Express is fine, but if you install SP1 then you\'ll need to reinstall x64 compilers from [here](http://www.microsoft.com/en-us/download/details.aspx?id=4422). Node.js distribution for Windows already includes node-gyp tool, so you don\'t need to worry about it.\n\nNext, compile libprotobuf. Get it from Google, open vsprojects/protobuf.sln and compile it according to your OS version. For Windows 64 you *must* compile 64-bit library as Node.js is 64-bit on your system. By default there is only 32-bit target, so you have to add 64-bit manually. Open libprotobuf project properties and set CRT to Multi-Threaded (*not* DLL). Compile libprotobuf Release.\n\nNext, run vsprojects/extract-includes.bat, it will copy required headers in vsprojects/include.\n\nCreate LIBPROTOBUF environment variable pointing to some folder where you\'ll put libprotobuf files. You can use SET LIBPROTOBUF=path from command line prompt, or use tool like RapidEE. Put libprotobuf.lib to $(LIBPROTOBUF)/lib and include files to $(LIBPROTOBUF)/include. You\'re done.\n\nNow just ``` npm install node-protobuf ``` and it should be fine.\n\n### Mac OS X\n\nLooks like it\'s as simple as ``` brew install protobuf ``` before installing npm.\n\n## Usage\n\nYou are *not* required to generate any JS code from your protocol buffer description. Everything happens dynamically.\n\n```\nvar fs = require("fs")\nvar p = require("node-protobuf").Protobuf\n// WARNING: next call will throw if desc file is invalid\nvar pb = new p(fs.readFileSync("protocol.desc")) // obviously you can use async methods, it\'s for simplicity reasons\nvar obj = {\n\t"name": "value"\n}\ntry {\n\tvar buf = pb.Serialize(obj, "MySchema") // you get Buffer here, send it via socket.write, etc.\n} catch (e) {\n\t// will throw if MySchema does not exist\n}\ntry {\n\tvar newObj = pb.Parse(buf, "MySchema") // you get plain object here, it should be exactly the same as obj\n} catch (e) {\n\t// will throw on invalid buffer or if MySchema does not exist\n}\n```\n\n### Construct\n\n**Protobuf(buffer[, preserve_int64])**\n\nParses binary buffer holding schema description. You can get schema by calling ```protoc protocol.proto -o protocol.desc```.\n\nOptional preserve_int64 argument allows to pass int64/uint64 numbers to/from JavaScript in a form of array consisting of high and low bits of such numbers: [hi, lo]. Note, that this is highly experimental and you must work with such numbers only if you really need such whole presicion. In any other case I recommend to use int32/uint32 or double if you need more precision. I added this functionality so JS programs working with existing protocol buffers enabled software could get same amount of presicion when transferring int64/uint64.\n\nPlease note, that both high and low bits must be unsigned if you want to Parse. Serialize will return unsigned only too. You have to work with bit parts to create full number using some other library, e.g. [Int64](https://github.com/broofa/node-int64).\n\nAlso, if you don\'t care about int64/uint64 presicion in JS, you can forget about preserve_int64 and all 64-bit integers that come to Serialize will become just Numbers, but if they are bigger than 2^53 you\'ll lose some data.\n\n### Serialize\n\n**Protobuf.Serialize(object, schema)**\n\nSerializes plain object with accordance to protocol schema (i.e. message described in you protocol description file). Returns Node.js Buffer. Throws an exception if schema does not exist.\n\n### Parse\n\n**Protobuf.Parse(buffer, schema)**\n\nParses Buffer (or UInt8Array for example, just anything that is binary data array) according to schema and returns plain object. If first argument isn\'t a Buffer, throws an exception. If Buffer is malformed (i.e. not a Protobuf), throws an exception.',
43 silly resolved     readmeFilename: 'README.md',
43 silly resolved     bugs: { url: 'https://github.com/fuwaneko/node-protobuf/issues' },
43 silly resolved     homepage: 'https://github.com/fuwaneko/node-protobuf',
43 silly resolved     _id: 'node-protobuf@1.0.10',
43 silly resolved     _from: 'node-protobuf@*' } ]
44 info install node-protobuf@1.0.10 into /Users/rukmal/Projects/SpotifyInstant
45 info installOne node-protobuf@1.0.10
46 info /Users/rukmal/Projects/SpotifyInstant/node_modules/node-protobuf unbuild
47 verbose tar unpack /Users/rukmal/.npm/node-protobuf/1.0.10/package.tgz
48 silly lockFile 887ce9ac-stant-node-modules-node-protobuf tar:///Users/rukmal/Projects/SpotifyInstant/node_modules/node-protobuf
49 verbose lock tar:///Users/rukmal/Projects/SpotifyInstant/node_modules/node-protobuf /Users/rukmal/.npm/887ce9ac-stant-node-modules-node-protobuf.lock
50 silly lockFile a1903e6d-node-protobuf-1-0-10-package-tgz tar:///Users/rukmal/.npm/node-protobuf/1.0.10/package.tgz
51 verbose lock tar:///Users/rukmal/.npm/node-protobuf/1.0.10/package.tgz /Users/rukmal/.npm/a1903e6d-node-protobuf-1-0-10-package-tgz.lock
52 silly gunzTarPerm modes [ '755', '644' ]
53 silly gunzTarPerm extractEntry package.json
54 silly gunzTarPerm extractEntry .npmignore
55 silly gunzTarPerm extractEntry README.md
56 silly gunzTarPerm extractEntry Gruntfile.js
57 silly gunzTarPerm extractEntry .gitattributes
58 silly gunzTarPerm extractEntry .travis.yml
59 silly gunzTarPerm extractEntry binding.gyp
60 silly gunzTarPerm extractEntry protobuf.cpp
61 silly lockFile 887ce9ac-stant-node-modules-node-protobuf tar:///Users/rukmal/Projects/SpotifyInstant/node_modules/node-protobuf
62 silly lockFile 887ce9ac-stant-node-modules-node-protobuf tar:///Users/rukmal/Projects/SpotifyInstant/node_modules/node-protobuf
63 silly lockFile a1903e6d-node-protobuf-1-0-10-package-tgz tar:///Users/rukmal/.npm/node-protobuf/1.0.10/package.tgz
64 silly lockFile a1903e6d-node-protobuf-1-0-10-package-tgz tar:///Users/rukmal/.npm/node-protobuf/1.0.10/package.tgz
65 info preinstall node-protobuf@1.0.10
66 verbose readDependencies using package.json deps
67 verbose readDependencies using package.json deps
68 silly resolved []
69 verbose about to build /Users/rukmal/Projects/SpotifyInstant/node_modules/node-protobuf
70 info build /Users/rukmal/Projects/SpotifyInstant/node_modules/node-protobuf
71 verbose linkStuff [ false,
71 verbose linkStuff   false,
71 verbose linkStuff   false,
71 verbose linkStuff   '/Users/rukmal/Projects/SpotifyInstant/node_modules' ]
72 info linkStuff node-protobuf@1.0.10
73 verbose linkBins node-protobuf@1.0.10
74 verbose linkMans node-protobuf@1.0.10
75 verbose rebuildBundles node-protobuf@1.0.10
76 info install node-protobuf@1.0.10
77 verbose unsafe-perm in lifecycle false
78 info node-protobuf@1.0.10 Failed to exec install script
79 info /Users/rukmal/Projects/SpotifyInstant/node_modules/node-protobuf unbuild
80 info preuninstall node-protobuf@1.0.10
81 info uninstall node-protobuf@1.0.10
82 verbose true,/Users/rukmal/Projects/SpotifyInstant/node_modules,/Users/rukmal/Projects/SpotifyInstant/node_modules unbuild node-protobuf@1.0.10
83 info postuninstall node-protobuf@1.0.10
84 error node-protobuf@1.0.10 install: `node-gyp rebuild`
84 error Exit status 1
85 error Failed at the node-protobuf@1.0.10 install script.
85 error This is most likely a problem with the node-protobuf package,
85 error not with npm itself.
85 error Tell the author that this fails on your system:
85 error     node-gyp rebuild
85 error You can get their info via:
85 error     npm owner ls node-protobuf
85 error There is likely additional logging output above.
86 error System Darwin 13.1.0
87 error command "node" "/usr/local/bin/npm" "install"
88 error cwd /Users/rukmal/Projects/SpotifyInstant
89 error node -v v0.10.25
90 error npm -v 1.3.24
91 error code ELIFECYCLE
92 verbose exit [ 1, true ]
